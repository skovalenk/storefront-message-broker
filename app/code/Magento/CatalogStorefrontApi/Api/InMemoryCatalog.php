<?php
# Generated by the Magento PHP proto generator.  DO NOT EDIT!

/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

declare(strict_types=1);

namespace Magento\CatalogStorefrontApi\Api;

use \Magento\CatalogStorefrontApi\Api\Data\ProductsGetRequestInterface;
use \Magento\CatalogStorefrontApi\Api\Data\ProductsGetResultInterface;
use \Magento\CatalogStorefrontApi\Api\Data\ImportProductsRequestInterface;
use \Magento\CatalogStorefrontApi\Api\Data\ImportProductsResponseInterface;
use \Magento\CatalogStorefrontApi\Api\Data\DeleteProductsRequestInterface;
use \Magento\CatalogStorefrontApi\Api\Data\DeleteProductsResponseInterface;
use \Magento\CatalogStorefrontApi\Api\Data\DeleteCategoriesRequestInterface;
use \Magento\CatalogStorefrontApi\Api\Data\DeleteCategoriesResponseInterface;
use \Magento\CatalogStorefrontApi\Api\Data\ImportCategoriesRequestInterface;
use \Magento\CatalogStorefrontApi\Api\Data\ImportCategoriesResponseInterface;
use \Magento\CatalogStorefrontApi\Api\Data\CategoriesGetRequestInterface;
use \Magento\CatalogStorefrontApi\Api\Data\CategoriesGetResponseInterface;

/**
 * Autogenerated description for InMemoryCatalog class
 *
 * @SuppressWarnings(PHPMD.CouplingBetweenObjects)
 */
class InMemoryCatalog implements CatalogInterface
{
    /**
     * @var CatalogServerInterface
     */
    private $service;

    /**
     * @param CatalogServerInterface $service
     */
    public function __construct(
        CatalogServerInterface $service
    ) {
        $this->service = $service;
    }

    /**
     * Autogenerated description for getProducts in memory client service method
     *
     * @param ProductsGetRequestInterface $request
     * @return ProductsGetResultInterface
     */
    public function getProducts(ProductsGetRequestInterface $request): ProductsGetResultInterface
    {
        return $this->service->getProducts($request);
    }

    /**
     * Autogenerated description for importProducts in memory client service method
     *
     * @param ImportProductsRequestInterface $request
     * @return ImportProductsResponseInterface
     */
    public function importProducts(ImportProductsRequestInterface $request): ImportProductsResponseInterface
    {
        return $this->service->importProducts($request);
    }

    /**
     * Autogenerated description for deleteProducts in memory client service method
     *
     * @param DeleteProductsRequestInterface $request
     * @return DeleteProductsResponseInterface
     */
    public function deleteProducts(DeleteProductsRequestInterface $request): DeleteProductsResponseInterface
    {
        return $this->service->deleteProducts($request);
    }

    /**
     * Autogenerated description for deleteCategories in memory client service method
     *
     * @param DeleteCategoriesRequestInterface $request
     * @return DeleteCategoriesResponseInterface
     */
    public function deleteCategories(DeleteCategoriesRequestInterface $request): DeleteCategoriesResponseInterface
    {
        return $this->service->deleteCategories($request);
    }

    /**
     * Autogenerated description for importCategories in memory client service method
     *
     * @param ImportCategoriesRequestInterface $request
     * @return ImportCategoriesResponseInterface
     */
    public function importCategories(ImportCategoriesRequestInterface $request): ImportCategoriesResponseInterface
    {
        return $this->service->importCategories($request);
    }

    /**
     * Autogenerated description for getCategories in memory client service method
     *
     * @param CategoriesGetRequestInterface $request
     * @return CategoriesGetResponseInterface
     */
    public function getCategories(CategoriesGetRequestInterface $request): CategoriesGetResponseInterface
    {
        return $this->service->getCategories($request);
    }
}
