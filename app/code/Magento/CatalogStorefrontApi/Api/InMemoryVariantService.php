<?php
# Generated by the Magento PHP proto generator.  DO NOT EDIT!

/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

declare(strict_types=1);

namespace Magento\CatalogStorefrontApi\Api;

use \Magento\CatalogStorefrontApi\Api\Data\ImportVariantsRequestInterface;
use \Magento\CatalogStorefrontApi\Api\Data\ImportVariantsResponseInterface;
use \Magento\CatalogStorefrontApi\Api\Data\DeleteVariantsRequestInterface;
use \Magento\CatalogStorefrontApi\Api\Data\DeleteVariantsResponseInterface;
use \Magento\CatalogStorefrontApi\Api\Data\ProductVariantRequestInterface;
use \Magento\CatalogStorefrontApi\Api\Data\ProductVariantResponseInterface;
use \Magento\CatalogStorefrontApi\Api\Data\OptionSelectionRequestInterface;

/**
 * Autogenerated description for InMemoryVariantService class
 *
 * @SuppressWarnings(PHPMD.CouplingBetweenObjects)
 */
class InMemoryVariantService implements VariantServiceInterface
{
    /**
     * @var VariantServiceServerInterface
     */
    private $service;

    /**
     * @param VariantServiceServerInterface $service
     */
    public function __construct(
        VariantServiceServerInterface $service
    ) {
        $this->service = $service;
    }

    /**
     * Autogenerated description for ImportProductVariants in memory client service method
     *
     * @param ImportVariantsRequestInterface $request
     * @return ImportVariantsResponseInterface
     */
    public function ImportProductVariants(ImportVariantsRequestInterface $request): ImportVariantsResponseInterface
    {
        return $this->service->ImportProductVariants($request);
    }

    /**
     * Autogenerated description for DeleteProductVariants in memory client service method
     *
     * @param DeleteVariantsRequestInterface $request
     * @return DeleteVariantsResponseInterface
     */
    public function DeleteProductVariants(DeleteVariantsRequestInterface $request): DeleteVariantsResponseInterface
    {
        return $this->service->DeleteProductVariants($request);
    }

    /**
     * Autogenerated description for GetProductVariants in memory client service method
     *
     * @param ProductVariantRequestInterface $request
     * @return ProductVariantResponseInterface
     */
    public function GetProductVariants(ProductVariantRequestInterface $request): ProductVariantResponseInterface
    {
        return $this->service->GetProductVariants($request);
    }

    /**
     * Autogenerated description for GetVariantsMatch in memory client service method
     *
     * @param OptionSelectionRequestInterface $request
     * @return ProductVariantResponseInterface
     */
    public function GetVariantsMatch(OptionSelectionRequestInterface $request): ProductVariantResponseInterface
    {
        return $this->service->GetVariantsMatch($request);
    }
}
